{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arian\\\\Documents\\\\ING 4\\\\Technologie Web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\Convert.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Convert = ({\n  language,\n  text\n}) => {\n  const [translated, setTranslated] = useState('');\n  const [debouncedText, setDebouncedText] = useState(text);\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedText(text);\n    }, 500);\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [text]);\n  useEffect(() => {\n    const doTranslation = async () => {\n      const {\n        data\n      } = await axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\n        params: {\n          q: debouncedText,\n          target: language.value,\n          key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM'\n        }\n      });\n      setTranslated(data.data.translations[0].translatedText);\n    };\n\n    doTranslation();\n  }, [language, debouncedText]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"ui header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, translated));\n};\n\nexport default Convert;","map":{"version":3,"sources":["C:/Users/Arian/Documents/ING 4/Technologie Web/PROJECT_WEB_OCRES/frontend/src/components/Convert.js"],"names":["React","useState","useEffect","axios","Convert","language","text","translated","setTranslated","debouncedText","setDebouncedText","timerId","setTimeout","clearTimeout","doTranslation","data","post","params","q","target","value","key","translations","translatedText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACK,IAAD,CAAlD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BF,MAAAA,gBAAgB,CAACJ,IAAD,CAAhB;AACD,KAFyB,EAEvB,GAFuB,CAA1B;AAIA,WAAO,MAAM;AACXO,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GARQ,EAQN,CAACL,IAAD,CARM,CAAT;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,aAAa,GAAG,YAAY;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMZ,KAAK,CAACa,IAAN,CACrB,0DADqB,EAErB,EAFqB,EAGrB;AACEC,QAAAA,MAAM,EAAE;AACNC,UAAAA,CAAC,EAAET,aADG;AAENU,UAAAA,MAAM,EAAEd,QAAQ,CAACe,KAFX;AAGNC,UAAAA,GAAG,EAAE;AAHC;AADV,OAHqB,CAAvB;AAYAb,MAAAA,aAAa,CAACO,IAAI,CAACA,IAAL,CAAUO,YAAV,CAAuB,CAAvB,EAA0BC,cAA3B,CAAb;AACD,KAdD;;AAgBAT,IAAAA,aAAa;AACd,GAlBQ,EAkBN,CAACT,QAAD,EAAWI,aAAX,CAlBM,CAAT;AAoBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BF,UAA3B,CADF,CADF;AAKD,CAvCD;;AAyCA,eAAeH,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Convert = ({ language, text }) => {\n  const [translated, setTranslated] = useState('');\n  const [debouncedText, setDebouncedText] = useState(text);\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedText(text);\n    }, 500);\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [text]);\n\n  useEffect(() => {\n    const doTranslation = async () => {\n      const { data } = await axios.post(\n        'https://translation.googleapis.com/language/translate/v2',\n        {},\n        {\n          params: {\n            q: debouncedText,\n            target: language.value,\n            key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM',\n          },\n        }\n      );\n\n      setTranslated(data.data.translations[0].translatedText);\n    };\n\n    doTranslation();\n  }, [language, debouncedText]);\n\n  return (\n    <div>\n      <h1 className=\"ui header\">{translated}</h1>\n    </div>\n  );\n};\n\nexport default Convert;\n"]},"metadata":{},"sourceType":"module"}