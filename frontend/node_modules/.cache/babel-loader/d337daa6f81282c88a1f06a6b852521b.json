{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minih\\\\OneDrive\\\\Documents\\\\ING4\\\\Technologie web\\\\TP web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\Graph.js\";\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nfunction Graph() {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const runCall = async () => {\n      let apiValue = await fetchData();\n      const header = apiValue.split('\\n').slice(0).map(line => line.split(','))[0].slice(4);\n      const frData = apiValue.split('\\n').slice(0).map(line => line.split(','))[129].slice(4);\n      const chartData = [];\n\n      for (let i = 0; i < header.length; i++) {\n        const newRow = {};\n        newRow.name = header[i];\n        newRow.data = parseInt(frData[i]);\n        chartData.push(newRow);\n        console.log(chartData);\n      }\n\n      setData(chartData);\n      setIsLoading(false);\n      return null;\n    };\n\n    const fetchData = async () => {\n      const requestOption = {\n        method: \"GET\",\n        redirect: \"follow\"\n      };\n      const URL = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv`;\n\n      try {\n        const response = await fetch(URL, requestOption);\n        return response.ok ? response.text() : null;\n      } catch (err) {\n        console.log(err);\n        return null;\n      }\n    };\n\n    runCall();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Graph\"));\n}\n\nexport default Graph;","map":{"version":3,"sources":["C:/Users/minih/OneDrive/Documents/ING4/Technologie web/TP web/PROJECT_WEB_OCRES/frontend/src/components/Graph.js"],"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Graph","data","setData","isLoading","setIsLoading","runCall","apiValue","fetchData","header","split","slice","map","line","frData","chartData","i","length","newRow","name","parseInt","push","console","log","requestOption","method","redirect","URL","response","fetch","ok","text","err"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,EAC4BC,KAD5B,EACmCC,aADnC,EACkDC,OADlD,EAC2DC,MAD3D,QAES,UAFT;;AAIA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,OAAO,GAAE,YAAW;AACtB,UAAIC,QAAQ,GAAG,MAAMC,SAAS,EAA9B;AACA,YAAMC,MAAM,GAAGF,QAAQ,CAACG,KAAT,CAAe,IAAf,EAAqBC,KAArB,CAA2B,CAA3B,EAA8BC,GAA9B,CAAkCC,IAAI,IAAKA,IAAI,CAACH,KAAL,CAAW,GAAX,CAA3C,EAA6D,CAA7D,EAAgEC,KAAhE,CAAsE,CAAtE,CAAf;AAEA,YAAMG,MAAM,GAAGP,QAAQ,CAACG,KAAT,CAAe,IAAf,EAAqBC,KAArB,CAA2B,CAA3B,EAA8BC,GAA9B,CAAkCC,IAAI,IAAKA,IAAI,CAACH,KAAL,CAAW,GAAX,CAA3C,EAA6D,GAA7D,EAAkEC,KAAlE,CAAwE,CAAxE,CAAf;AAEA,YAAMI,SAAS,GAAE,EAAjB;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACP,MAAM,CAACQ,MAAvB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,cAAME,MAAM,GAAE,EAAd;AACAA,QAAAA,MAAM,CAACC,IAAP,GAAcV,MAAM,CAACO,CAAD,CAApB;AACAE,QAAAA,MAAM,CAAChB,IAAP,GAAckB,QAAQ,CAACN,MAAM,CAACE,CAAD,CAAP,CAAtB;AACAD,QAAAA,SAAS,CAACM,IAAV,CAAeH,MAAf;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACH;;AACDZ,MAAAA,OAAO,CAACY,SAAD,CAAP;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,aAAO,IAAP;AACH,KAjBD;;AAkBA,UAAMG,SAAS,GAAG,YAAW;AACzB,YAAMgB,aAAa,GAAG;AAClBC,QAAAA,MAAM,EAAE,KADU;AAElBC,QAAAA,QAAQ,EAAE;AAFQ,OAAtB;AAIA,YAAMC,GAAG,GAAG,wJAAZ;;AAEA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAKH,aAAL,CAA5B;AACA,eAAOI,QAAQ,CAACE,EAAT,GAAcF,QAAQ,CAACG,IAAT,EAAd,GAAgC,IAAvC;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACA,eAAO,IAAP;AACH;AACJ,KAdD;;AAeA1B,IAAAA,OAAO;AACV,GAnCQ,EAmCP,EAnCO,CAAT;AAoCI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ;AAMP;;AAAA,eAAeL,KAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n  } from 'recharts';\r\n\r\nfunction Graph() {\r\n    const [data, setData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const runCall =async() => {\r\n            let apiValue = await fetchData();\r\n            const header = apiValue.split('\\n').slice(0).map(line => (line.split(',')))[0].slice(4);\r\n\r\n            const frData = apiValue.split('\\n').slice(0).map(line => (line.split(',')))[129].slice(4);\r\n            \r\n            const chartData =[];\r\n            for (let i=0; i<header.length ; i++){\r\n                const newRow ={};\r\n                newRow.name = header[i];\r\n                newRow.data = parseInt(frData[i]);\r\n                chartData.push(newRow);\r\n                console.log(chartData);\r\n            }\r\n            setData(chartData);\r\n            setIsLoading(false);\r\n            return null;\r\n        }\r\n        const fetchData = async() => {\r\n            const requestOption = {\r\n                method: \"GET\",\r\n                redirect: \"follow\"\r\n            }\r\n            const URL= `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv`\r\n\r\n            try {\r\n                const response = await fetch(URL,requestOption);\r\n                return response.ok ? response.text() : null\r\n            } catch (err) {\r\n                console.log(err);\r\n                return null;\r\n            }\r\n        }\r\n        runCall();\r\n    },[])\r\n        return(\r\n            <div>\r\n                <p>Graph</p>\r\n            </div>\r\n        );\r\n    \r\n}export default Graph;"]},"metadata":{},"sourceType":"module"}