{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minih\\\\OneDrive\\\\Documents\\\\ING4\\\\Technologie web\\\\TP web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\M\\xE9t\\xE9o.js\";\nimport axios from 'axios';\nimport React, { useState } from 'react';\n\nconst Météo = () => {\n  const URL = \"https://api.openweathermap.org/data/2.5/weather\";\n  const API_Key = \"4081444b7b90198136fefe6ed4ccf35b\";\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const fetchWeather = async query => {\n    const {\n      data\n    } = await axios.get(URL, {\n      params: {\n        q: query,\n        units: 'metric',\n        APPID: API_Key\n      }\n    });\n    return data;\n  };\n\n  const search = async e => {\n    if (e.key == 'Enter') {\n      const data = await fetchWeather(query);\n      setWeather(data);\n      setQuery('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    onKeyPress: search,\n    placeholder: \"S\\xE9lectionnez une ville\",\n    value: \"Paris\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), weather.main && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"city-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \" \", weather.name, \" (\", weather.sys.country, \")  \")), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"city-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, Math.round(weather.main.temp), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"city-icon\",\n    src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, weather.weather[0].description)))));\n};\n\nexport default Météo;","map":{"version":3,"sources":["C:/Users/minih/OneDrive/Documents/ING4/Technologie web/TP web/PROJECT_WEB_OCRES/frontend/src/components/Météo.js"],"names":["axios","React","useState","Météo","URL","API_Key","query","setQuery","weather","setWeather","fetchWeather","data","get","params","q","units","APPID","search","e","key","target","value","main","name","sys","country","Math","round","temp","icon","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,GAAG,GAAG,iDAAZ;AACA,QAAMC,OAAO,GAAG,kCAAhB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAGA,QAAMQ,YAAY,GAAG,MAAMJ,KAAN,IAAgB;AACjC,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAUR,GAAV,EAAe;AAClCS,MAAAA,MAAM,EAAE;AACJC,QAAAA,CAAC,EAAER,KADC;AAEJS,QAAAA,KAAK,EAAE,QAFH;AAGJC,QAAAA,KAAK,EAAEX;AAHH;AAD0B,KAAf,CAAvB;AAOA,WAAOM,IAAP;AACH,GATD;;AAWA,QAAMM,MAAM,GAAG,MAAMC,CAAN,IAAY;AACvB,QAAIA,CAAC,CAACC,GAAF,IAAS,OAAb,EAAsB;AAClB,YAAMR,IAAI,GAAG,MAAMD,YAAY,CAACJ,KAAD,CAA/B;AACAG,MAAAA,UAAU,CAACE,IAAD,CAAV;AACAJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACA,IAAA,SAAS,EAAC,OADV;AAEA,IAAA,KAAK,EAAED,KAFP;AAGA,IAAA,QAAQ,EAAGY,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAHzB;AAIA,IAAA,UAAU,EAAEJ,MAJZ;AAKA,IAAA,WAAW,EAAC,2BALZ;AAMA,IAAA,KAAK,EAAC,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUKT,OAAO,CAACc,IAAR,iBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAASd,OAAO,CAACe,IAAjB,QAAyBf,OAAO,CAACgB,GAAR,CAAYC,OAArC,QAFJ,CADJ,eAMI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACC,KAAL,CAAWnB,OAAO,CAACc,IAAR,CAAaM,IAAxB,CADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CANJ,eAUI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAG,oCAAmCpB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBqB,IAAK,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIrB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBsB,WAAvB,CAFJ,CAVJ,CAXR,CADJ,CADJ;AAiCH,CA3DD;;AA2DE,eAAe3B,KAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst Météo = () => {\r\n    const URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\n    const API_Key = \"4081444b7b90198136fefe6ed4ccf35b\";\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n\r\n\r\n    const fetchWeather = async(query) => {\r\n        const { data } = await axios.get(URL, {\r\n            params: {\r\n                q: query,\r\n                units: 'metric',\r\n                APPID: API_Key,\r\n            },\r\n        });\r\n        return data;\r\n    }\r\n\r\n    const search = async(e) => {\r\n        if (e.key == 'Enter') {\r\n            const data = await fetchWeather(query)\r\n            setWeather(data);\r\n            setQuery('');\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className=\"ui form\">\r\n            <div>\r\n                \r\n                <input \r\n                className=\"input\" \r\n                value={query} \r\n                onChange={(e) => setQuery(e.target.value)} \r\n                onKeyPress={search}\r\n                placeholder=\"Sélectionnez une ville\"\r\n                value=\"Paris\"\r\n                /> \r\n                {weather.main && (\r\n                    <div className=\"city\" >\r\n                        <h2 className=\"city-name\" >\r\n                            <span></span>\r\n                            <span > {weather.name} ({weather.sys.country})  </span>\r\n                        </h2> \r\n                        \r\n                        <h2 className=\"city-temp\">\r\n                            {Math.round(weather.main.temp)}\r\n                            <sup>°C</sup>\r\n                        </h2>\r\n                        <h2 className=\"info\">\r\n                            <img className=\"city-icon\" src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}/>\r\n                            <p>{weather.weather[0].description}</p>\r\n                        </h2>\r\n                    </div>\r\n            )} \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};export default Météo;"]},"metadata":{},"sourceType":"module"}